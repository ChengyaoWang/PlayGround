{
    "Model": "AlexNet",
    "Model Size Trainable": 58322314,
    "Model Size Total": 58322314,
    "Model Structure": [
        "(conv1): Conv2d(3, 96, kernel_size=(11, 11), stride=(2, 2), padding=(4, 4))",
        "(maxpool1): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)",
        "(conv2): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))",
        "(maxpool2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)",
        "(conv3): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))",
        "(conv4): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))",
        "(conv5): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))",
        "(maxpool3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)",
        "(avgPool): AdaptiveAvgPool2d(output_size=(6, 6))",
        "(classifier): Sequential(",
        "  (0): Dropout(p=0.5, inplace=False)",
        "  (1): Linear(in_features=9216, out_features=4096, bias=True)",
        "  (2): ReLU(inplace=True)",
        "  (3): Dropout(p=0.5, inplace=False)",
        "  (4): Linear(in_features=4096, out_features=4096, bias=True)",
        "  (5): ReLU(inplace=True)",
        "  (6): Linear(in_features=4096, out_features=10, bias=True)",
        ")"
    ],
    "Batch Size": 128,
    "Total Epoch": 500,
    "Device": "cuda",
    "Loss Function": "CrossEntropyLoss",
    "Optimizer": {
        "Type": "SGD",
        "State": {},
        "param_groups": {
            "lr": 0.001,
            "momentum": 0.9,
            "dampening": 0,
            "weight_decay": 0,
            "nesterov": false,
            "initial_lr": 0.001,
            "params": [
                140531784099592,
                140531784099664,
                140531784099736,
                140531784099808,
                140531784099880,
                140531784099952,
                140531784100096,
                140531784100240,
                140531784100168,
                140531784100456,
                140531784100672,
                140531784100744,
                140531784101032,
                140531871818448,
                140531784098152,
                140531784098080
            ]
        }
    },
    "lr Scheduler": {
        "Type": "MultiStepLR",
        "State": {
            "milestones": {
                "500": 1
            },
            "gamma": 0.1,
            "base_lrs": [
                0.001
            ],
            "last_epoch": 0,
            "_step_count": 1,
            "_get_lr_called_within_step": false,
            "_last_lr": [
                0.001
            ]
        }
    },
    "Train Transform": [
        "RandomCrop(size=(32, 32), padding=4)",
        "RandomHorizontalFlip(p=0.5)",
        "ToTensor()",
        "Normalize(mean=(0.5, 0.5, 0.5), std=(0.1, 0.1, 0.1))"
    ],
    "Test Transform": [
        "ToTensor()",
        "Normalize(mean=(0.5, 0.5, 0.5), std=(0.1, 0.1, 0.1))"
    ],
    "Dataset": "CIFAR10",
    "TrainingTime": "3:58:44.937195",
    "InferenceTime": "0:00:01.323547",
    "Performance": {
        "Best_Train": 99.838,
        "Final_Train": 99.77,
        "Best_Test": 82.31,
        "Final_Test": 81.57,
        "Best_Loss": 831.2640733718872,
        "Final_Loss": 3.079309859778732
    },
    "Class Performance": {
        "plane": 87.8,
        "car": 90.6,
        "bird": 74.3,
        "cat": 68.7,
        "deer": 79.4,
        "dog": 68.9,
        "frog": 85.3,
        "horse": 86.2,
        "ship": 88.1,
        "truck": 86.4
    },
    "Confusion Matrix": {
        "plane": [
            878,
            14,
            25,
            8,
            8,
            4,
            7,
            6,
            36,
            14
        ],
        "car": [
            12,
            906,
            4,
            6,
            1,
            7,
            5,
            2,
            13,
            44
        ],
        "bird": [
            59,
            1,
            743,
            52,
            53,
            33,
            25,
            19,
            7,
            8
        ],
        "cat": [
            20,
            11,
            43,
            687,
            50,
            107,
            37,
            24,
            6,
            15
        ],
        "deer": [
            27,
            3,
            46,
            36,
            794,
            20,
            22,
            46,
            2,
            4
        ],
        "dog": [
            15,
            5,
            23,
            162,
            29,
            689,
            19,
            46,
            5,
            7
        ],
        "frog": [
            15,
            3,
            25,
            54,
            21,
            22,
            853,
            2,
            3,
            2
        ],
        "horse": [
            17,
            1,
            13,
            40,
            26,
            36,
            1,
            862,
            0,
            4
        ],
        "ship": [
            63,
            16,
            5,
            12,
            5,
            5,
            1,
            1,
            881,
            11
        ],
        "truck": [
            31,
            60,
            3,
            8,
            1,
            3,
            4,
            6,
            20,
            864
        ]
    }
}