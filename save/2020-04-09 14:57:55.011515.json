{
    "Model": "LeNet5",
    "Model Size Trainable": 62006,
    "Model Size Total": 62006,
    "Model Structure": [
        "(conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))",
        "(maxpool1): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)",
        "(conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))",
        "(maxpool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)",
        "(fc1): Linear(in_features=400, out_features=120, bias=True)",
        "(fc2): Linear(in_features=120, out_features=84, bias=True)",
        "(fc3): Linear(in_features=84, out_features=10, bias=True)"
    ],
    "Batch Size": 128,
    "Total Epoch": 300,
    "Device": "cuda",
    "Loss Function": "CrossEntropyLoss",
    "Optimizer": {
        "Type": "SGD",
        "State": {},
        "param_groups": {
            "lr": 0.001,
            "momentum": 0.9,
            "dampening": 0,
            "weight_decay": 0,
            "nesterov": false,
            "initial_lr": 0.001,
            "params": [
                140101139260544,
                140101139260616,
                140101139260472,
                140101139260832,
                140101139260976,
                140101139261120,
                140101139261336,
                140101139261408,
                140101139279448,
                140101139279376
            ]
        }
    },
    "lr Scheduler": {
        "Type": "MultiStepLR",
        "State": {
            "milestones": {
                "100": 1,
                "200": 1
            },
            "gamma": 0.1,
            "base_lrs": [
                0.001
            ],
            "last_epoch": 0,
            "_step_count": 1,
            "_get_lr_called_within_step": false,
            "_last_lr": [
                0.001
            ]
        }
    },
    "Train Transform": [
        "RandomCrop(size=(32, 32), padding=4)",
        "RandomHorizontalFlip(p=0.5)",
        "ToTensor()",
        "Normalize(mean=(0.5, 0.5, 0.5), std=(0.1, 0.1, 0.1))"
    ],
    "Test Transform": [
        "ToTensor()",
        "Normalize(mean=(0.5, 0.5, 0.5), std=(0.1, 0.1, 0.1))"
    ],
    "Dataset": "CIFAR10",
    "TrainingTime": "0:28:36.697336",
    "InferenceTime": "0:00:00.543237",
    "Performance": {
        "Best_Train": 69.34,
        "Final_Train": 69.118,
        "Best_Test": 69.55,
        "Final_Test": 69.39,
        "Best_Loss": 805.1954085826874,
        "Final_Loss": 347.7522624731064
    },
    "Class Performance": {
        "plane": 72,
        "car": 85.7,
        "bird": 61.7,
        "cat": 46,
        "deer": 63.3,
        "dog": 59.5,
        "frog": 79.6,
        "horse": 74.4,
        "ship": 74.1,
        "truck": 77.6
    },
    "Confusion Matrix": {
        "plane": [
            720,
            44,
            80,
            13,
            20,
            4,
            5,
            19,
            51,
            44
        ],
        "car": [
            25,
            857,
            4,
            9,
            2,
            4,
            6,
            6,
            22,
            65
        ],
        "bird": [
            72,
            6,
            617,
            42,
            69,
            74,
            67,
            29,
            11,
            13
        ],
        "cat": [
            18,
            14,
            86,
            460,
            57,
            189,
            80,
            57,
            14,
            25
        ],
        "deer": [
            16,
            7,
            82,
            62,
            633,
            35,
            72,
            79,
            11,
            3
        ],
        "dog": [
            14,
            3,
            72,
            171,
            42,
            595,
            27,
            67,
            6,
            3
        ],
        "frog": [
            11,
            3,
            44,
            68,
            41,
            25,
            796,
            6,
            4,
            2
        ],
        "horse": [
            10,
            6,
            44,
            51,
            54,
            54,
            19,
            744,
            3,
            15
        ],
        "ship": [
            89,
            60,
            15,
            21,
            11,
            5,
            7,
            5,
            741,
            46
        ],
        "truck": [
            38,
            108,
            4,
            15,
            10,
            3,
            5,
            17,
            24,
            776
        ]
    }
}