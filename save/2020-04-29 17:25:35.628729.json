{
    "Model": "ResNet8v1_FOR_CIFAR",
    "Model Size Trainable": 78138,
    "Model Size Total": 78138,
    "Model Structure": [
        "(conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "(bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "(relu): ReLU(inplace=True)",
        "(conv2_x): Sequential(",
        "  (0): ResNetv1_BasicBlock(",
        "    (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "    (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    (relu1): ReLU(inplace=True)",
        "    (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "    (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    (relu2): ReLU(inplace=True)",
        "  )",
        ")",
        "(conv3_x): Sequential(",
        "  (0): ResNetv1_BasicBlock(",
        "    (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)",
        "    (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    (relu1): ReLU(inplace=True)",
        "    (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "    (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    (relu2): ReLU(inplace=True)",
        "    (downsample): Sequential(",
        "      (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2))",
        "      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    )",
        "  )",
        ")",
        "(conv4_x): Sequential(",
        "  (0): ResNetv1_BasicBlock(",
        "    (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)",
        "    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    (relu1): ReLU(inplace=True)",
        "    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)",
        "    (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    (relu2): ReLU(inplace=True)",
        "    (downsample): Sequential(",
        "      (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2))",
        "      (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)",
        "    )",
        "  )",
        ")",
        "(avgPool): AdaptiveAvgPool2d(output_size=(1, 1))",
        "(fc): Linear(in_features=64, out_features=10, bias=True)"
    ],
    "Batch Size": 128,
    "Total Epoch": 350,
    "Device": "cuda",
    "Loss Function": "CrossEntropyLoss",
    "Optimizer": {
        "Type": "SGD",
        "State": {},
        "param_groups": {
            "lr": 0.01,
            "momentum": 0.9,
            "dampening": 0,
            "weight_decay": 0.0005,
            "nesterov": false,
            "initial_lr": 0.01,
            "params": [
                140353364530160,
                140353364530088,
                140353364530304,
                140353463259856,
                140353364530520,
                140353364530592,
                140353364530880,
                140353364530808,
                140353364531024,
                140353364531816,
                140353364531744,
                140353364531960,
                140353364532248,
                140353364532176,
                140353364532392,
                140353364531312,
                140353364531384,
                140353364531456,
                140353364531528,
                140353364533184,
                140353364615312,
                140353364615384,
                140353364615744,
                140353364615960,
                140353364616032,
                140353364532680,
                140353364532752,
                140353364532824,
                140353364532896,
                140353364616392,
                140353364616464
            ]
        }
    },
    "lr Scheduler": {
        "Type": "MultiStepLR",
        "State": {
            "milestones": {
                "150": 1,
                "250": 1
            },
            "gamma": 0.1,
            "base_lrs": [
                0.01
            ],
            "last_epoch": 0,
            "_step_count": 1,
            "_get_lr_called_within_step": false,
            "_last_lr": [
                0.01
            ]
        }
    },
    "Train Transform": [
        "RandomCrop(size=(32, 32), padding=4)",
        "RandomHorizontalFlip(p=0.5)",
        "ToTensor()",
        "Normalize(mean=(0.5, 0.5, 0.5), std=(0.1, 0.1, 0.1))"
    ],
    "Test Transform": [
        "ToTensor()",
        "Normalize(mean=(0.5, 0.5, 0.5), std=(0.1, 0.1, 0.1))"
    ],
    "Dataset": "CIFAR10",
    "TrainingTime": "0:53:57.980793",
    "InferenceTime": "0:00:00.684348",
    "Performance": {
        "Best_Train": 91.802,
        "Final_Train": 91.44,
        "Best_Test": 86.9,
        "Final_Test": 86.58,
        "Best_Loss": 681.8559398651123,
        "Final_Loss": 103.51059602200985
    },
    "Class Performance": {
        "plane": 89.6,
        "car": 93.8,
        "bird": 80.1,
        "cat": 76,
        "deer": 86.7,
        "dog": 78.7,
        "frog": 90.3,
        "horse": 87,
        "ship": 92.6,
        "truck": 91
    },
    "Confusion Matrix": {
        "plane": "[896.0, 11.0, 22.0, 6.0, 7.0, 1.0, 2.0, 7.0, 36.0, 12.0]",
        "car": "[7.0, 938.0, 0.0, 1.0, 0.0, 0.0, 2.0, 1.0, 6.0, 45.0]",
        "bird": "[32.0, 2.0, 801.0, 34.0, 45.0, 16.0, 52.0, 8.0, 5.0, 5.0]",
        "cat": "[19.0, 5.0, 30.0, 760.0, 30.0, 79.0, 37.0, 16.0, 10.0, 14.0]",
        "deer": "[6.0, 1.0, 29.0, 25.0, 867.0, 12.0, 30.0, 22.0, 6.0, 2.0]",
        "dog": "[7.0, 0.0, 30.0, 106.0, 24.0, 787.0, 13.0, 28.0, 4.0, 1.0]",
        "frog": "[5.0, 0.0, 27.0, 30.0, 22.0, 6.0, 903.0, 4.0, 1.0, 2.0]",
        "horse": "[13.0, 1.0, 18.0, 24.0, 33.0, 27.0, 5.0, 870.0, 1.0, 8.0]",
        "ship": "[40.0, 9.0, 3.0, 7.0, 0.0, 1.0, 1.0, 1.0, 926.0, 12.0]",
        "truck": "[19.0, 46.0, 4.0, 5.0, 1.0, 0.0, 0.0, 1.0, 14.0, 910.0]"
    }
}